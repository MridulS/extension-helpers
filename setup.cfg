[metadata]
name = extension-helpers
provides = extension_helpers
author = The Astropy Developers
author_email = astropy.team@gmail.com
license = BSD 3-Clause License
license_files = LICENSE.rst
url = https://github.com/astropy/extension-helpers
description = Utilities for building and installing packages with compiled extensions
long_description = file: README.rst
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Framework :: Setuptools Plugin
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Topic :: Software Development :: Build Tools
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: System :: Archiving :: Packaging

[options]
zip_safe = False
python_requires = >=3.7
packages = find:
install_requires =
    setuptools>=40.2
    tomli>=1.0.0 ; python_version < '3.11'

[options.package_data]
extension_helpers = src/compiler.c

[options.entry_points]
setuptools.finalize_distribution_options =
    extension_helpers_get_extensions = extension_helpers:_finalize_distribution_hook

[options.extras_require]
test =
    wheel
    pytest
    pytest-cov
    coverage>=4
    cython
docs =
    sphinx
    sphinx-automodapi

[tool:pytest]
testpaths = "extension_helpers" "docs"
filterwarnings =
    error

[flake8]
max-line-length = 100

[coverage:run]
omit =
  extension_helpers/*/setup_package.py
  extension_helpers/tests/*
  extension_helpers/conftest.py
  */extension_helpers/*/setup_package.py
  */extension_helpers/tests/*
  */extension_helpers/conftest.py

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
